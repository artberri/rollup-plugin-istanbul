name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        rollup-version: [^1, ^2, ^3]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v2.1.0
        with:
          version: "7.x"
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: Lint code
        run: pnpm run lint
      - name: Install rollup version {{ matrix.rollup-version }}
        run: pnpm add -D rollup@${{ matrix.rollup-version }}
      - name: Test code
        run: pnpm run test
